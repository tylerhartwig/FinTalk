openapi: 3.0.0
info:
  contact:
    name: OpenCage Data Ltd
    url: 'https://opencagedata.com/contact'
  version: '1'
  termsOfService: 'https://opencagedata.com/terms'
  title: OpenCage Geocoder
  description: Worldwide forward and reverse geocoding
  x-origin:
    format: swagger
    url: 'https://opencagedata.com/swagger.yaml'
    version: '2.0'
  x-logo:
    url: 'https://opencagedata.com/opencagelogo-green.png'
externalDocs:
  description: OpenCage Geocoder Website
  url: 'https://opencagedata.com/api'
paths:
  '/v{version}/{format}':
    get:
      description: geocode a query
      parameters:
        - name: version
          in: path
          required: true
          description: API version.
          schema:
            type: integer
        - name: format
          in: path
          required: true
          description: 'format of the response. One of ''json'', ''xml'' or ''map''.'
          schema:
            type: string
        - name: q
          in: query
          description: 'string or lat,lng to be geocoded.'
          required: true
          schema:
            type: string
        - name: key
          in: query
          description: an application key.
          required: true
          schema:
            type: string
        - name: abbrv
          in: query
          description: >-
            when true we attempt to abbreviate the formatted field in the
            response.
          schema:
            type: boolean
        - name: add_request
          in: query
          description: if true the request is included in the response.
          schema:
            type: boolean
        - name: bounds
          in: query
          description: >-
            four coordinate points forming the south-west and north-east corners
            of a bounding box (min long, min lat, max long, max lat).
          schema:
            type: string
        - name: countrycode
          in: query
          description: >-
            two letter code ISO 3166-1 Alpha 2 code to limit results to that
            country.
          schema:
            type: string
        - name: jsonp
          in: query
          description: wraps the returned JSON with a function name.
          schema:
            type: string
        - name: language
          in: query
          description: 'an IETF format language code (ex: ''es'' or ''pt-BR'').'
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return. Default is 10. Maximum is 100.
          schema:
            type: integer
        - name: min_confidence
          in: query
          description: >-
            integer from 1-10. Only results with at least this confidence are
            returned.
          schema:
            type: integer
        - name: no_annotations
          in: query
          description: when true annotations are not added to results.
          schema:
            type: boolean
        - name: no_dedupe
          in: query
          description: when true results are not deduplicated.
          schema:
            type: boolean
        - name: no_record
          in: query
          description: when true query content is not logged.
          schema:
            type: boolean
        - name: pretty
          in: query
          description: when true results are pretty printed. Useful for debugging.
          schema:
            type: boolean
        - name: proximity
          in: query
          description: 'lat,lng to bias results.'
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
        '402':
          description: Valid request but quota exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
        '403':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Invalid API endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
        '410':
          description: Request too long
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
        '503':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
servers:
  - url: 'https://api.opencagedata.com/geocode'
components:
  schemas:
    Response:
      properties:
        documentation:
          type: string
        rate:
          type: object
          properties:
            limit:
              type: integer
            remaining:
              type: integer
            reset:
              type: integer
        licenses:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
        status:
          type: object
          properties:
            message:
              type: string
            code:
              type: integer
        total_results:
          type: integer
        timestamp:
          type: object
          properties:
            created_http:
              type: string
            created_unix:
              type: integer
        stay_informed:
          type: object
          properties:
            blog:
              type: string
            twitter:
              type: string
        thanks:
          type: string
        results:
          type: array
          items:
            type: object
            properties:
              annotations:
                type: object
              bounds:
                type: object
                properties:
                  northeast:
                    $ref: '#/components/schemas/LatLng'
                  southwest:
                    $ref: '#/components/schemas/LatLng'
              components:
                type: object
              confidence:
                type: integer
              formatted:
                type: string
              geometry:
                $ref: '#/components/schemas/LatLng'
    LatLng:
      type: object
      properties:
        lat:
          type: number
          format: float
        lng:
          type: number
          format: float